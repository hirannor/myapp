<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="myapp.customer.management.dao.mapper.CustomerManagementMapper">

	<resultMap type="myapp.customer.bean.Customer" id="CustomerResultMap">
		<result property="id" column="id" />
		<result property="username" column="username" />
		<result property="password" column="password" />
		<result property="role" column="role" />
		<result property="name" column="name" />
		<result property="age" column="age" />
		<result property="email" column="email" />
		<result property="accountStatus" column="enabled" />
	</resultMap>

	<delete id="deleteUsrAuthById" parameterType="Integer">
		DELETE FROM
			usr_auth
		WHERE 
			id = #{id}
	</delete>

	<delete id="deleteUsrRoleById" parameterType="Integer">
		DELETE FROM
			usr_role
		WHERE 
			id = #{id}
	</delete>

	<delete id="deleteCustomerById" parameterType="Integer">
		DELETE FROM
			usr_user 
		WHERE
			 id = #{id}
	</delete>

	<select id="getCustomerList" resultMap="CustomerResultMap">
		SELECT 
			a.id,
			a.name, 
			a.age, 
			a.email,
			b.role,
			c.username, 
			c.password,
			c.enabled
		FROM 
			usr_user a
		INNER JOIN
			usr_role b 
		ON
			(a.id = b.id) 
		INNER JOIN 
			usr_auth c 
		ON
			(b.username = c.username) 
		WHERE 
			b.role 
		NOT LIKE 
			'ADMIN'
	</select>

	<update id="changeAccountStatus" parameterType="myapp.customer.management.service.bean.ChangeStatusRequest">
		UPDATE 
			usr_auth
		SET
			enabled = #{status}
		WHERE 
			username = #{username}
	</update>
	
	<update id="editCustomer" parameterType="myapp.customer.bean.Customer" keyProperty="id" keyColumn="id">
		UPDATE 
			usr_user
		SET
			name = #{name},
			age = #{age},
			email = #{email}
		WHERE 
			id = #{id}
	</update>

</mapper>