<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="myapp.customer.management.dao.mapper.CustomerManagementMapper">

	<resultMap type="myapp.customer.bean.Customer" id="CustomerResultMap">
		<result property="id" column="id" />
		<result property="username" column="username" />
		<result property="password" column="password" />
		<result property="role" column="role" />
		<result property="name" column="name" />
		<result property="age" column="age" />
		<result property="email" column="email" />
		<result property="accountStatus" column="enabled" />
	</resultMap>

	<delete id="deleteUsrAuthById" parameterType="Integer">
		DELETE
		FROM
		USR_AUTH
		where id = #{id}
	</delete>

	<delete id="deleteUsrRoleById" parameterType="Integer">
		DELETE
		FROM
			USR_ROLE
		WHERE 
			id = #{id}
	</delete>

	<delete id="deleteCustomerById" parameterType="Integer">
		DELETE
		FROM
			USR_USER 
		WHERE id = #{id}
	</delete>

	<select id="getCustomerList" resultMap="CustomerResultMap">
		select a.id, c.username, c.password,
		b.role,
		a.name, a.age, a.email, c.enabled from USR_USER a
		inner
		join usr_role b on
		(a.id = b.id) inner join usr_auth c on
		(b.username =
		c.username) where b.role not LIKE 'ADMIN'
	</select>

	<update id="changeAccountStatus" parameterType="myapp.customer.management.service.bean.ChangeStatusRequest">
		UPDATE USR_AUTH
		SET
			enabled = #{status}
		WHERE 
			username = #{username}
	</update>
	
	<update id="editCustomer" parameterType="myapp.customer.bean.Customer"
		keyProperty="id" keyColumn="id">
		UPDATE USR_USER
		SET
			name = #{name},
			age = #{age},
			email = #{email}
		WHERE 
			id = #{id}
	</update>

</mapper>